name: Playwright Tests (Allure)

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci

      # Cache browsers to speed up runs
      - uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: pw-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - run: npx playwright install --with-deps

      - name: Run tests
        run: npx playwright test --project=${{ matrix.browser }}

      # Upload per-browser Allure results so we can merge later
      - name: Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.browser }}
          path: allure-results

      # (Optional) also upload Playwright HTML
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report

  # Merge results from all matrix jobs and build the Allure site
  allure-report:
    if: always()
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: allure-results-*
          path: ./allure-results
          merge-multiple: true

      # Allure CLI needs Java
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - run: npx -y allure-commandline@2.29.0 generate ./allure-results --clean -o ./allure-report


      - name: Upload Allure HTML
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: ./allure-report
          retention-days: 7
